<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="per.bryan.temperature.mapper.TemperatureDao">
  <resultMap id="BaseResultMap" type="per.bryan.temperature.pojo.Temperature">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="greenhouseNo" jdbcType="VARCHAR" property="greenhouseNo" />
    <result column="sensorNo" jdbcType="VARCHAR" property="sensorNo" />
    <result column="temperature" jdbcType="VARCHAR" property="temperature" />
    <result column="humidity" jdbcType="VARCHAR" property="humidity" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, greenhouseNo, sensorNo, temperature, humidity, `date`
  </sql>
  <select id="selectByExample" parameterType="per.bryan.temperature.mapper.TemperatureExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from temperature
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from temperature
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from temperature
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="per.bryan.temperature.mapper.TemperatureExample">
    delete from temperature
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="per.bryan.temperature.pojo.Temperature" useGeneratedKeys="true">
    insert into temperature (greenhouseNo, sensorNo, temperature, 
      humidity, `date`)
    values (#{greenhouseNo,jdbcType=VARCHAR}, #{sensorNo,jdbcType=VARCHAR}, #{temperature,jdbcType=VARCHAR}, 
      #{humidity,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="per.bryan.temperature.pojo.Temperature" useGeneratedKeys="true">
    insert into temperature
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="greenhouseNo != null">
        greenhouseNo,
      </if>
      <if test="sensorNo != null">
        sensorNo,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="humidity != null">
        humidity,
      </if>
      <if test="date != null">
        `date`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="greenhouseNo != null">
        #{greenhouseNo,jdbcType=VARCHAR},
      </if>
      <if test="sensorNo != null">
        #{sensorNo,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="humidity != null">
        #{humidity,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="per.bryan.temperature.mapper.TemperatureExample" resultType="java.lang.Long">
    select count(*) from temperature
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update temperature
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.greenhouseNo != null">
        greenhouseNo = #{record.greenhouseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sensorNo != null">
        sensorNo = #{record.sensorNo,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=VARCHAR},
      </if>
      <if test="record.humidity != null">
        humidity = #{record.humidity,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        `date` = #{record.date,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update temperature
    set id = #{record.id,jdbcType=INTEGER},
      greenhouseNo = #{record.greenhouseNo,jdbcType=VARCHAR},
      sensorNo = #{record.sensorNo,jdbcType=VARCHAR},
      temperature = #{record.temperature,jdbcType=VARCHAR},
      humidity = #{record.humidity,jdbcType=VARCHAR},
      `date` = #{record.date,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="per.bryan.temperature.pojo.Temperature">
    update temperature
    <set>
      <if test="greenhouseNo != null">
        greenhouseNo = #{greenhouseNo,jdbcType=VARCHAR},
      </if>
      <if test="sensorNo != null">
        sensorNo = #{sensorNo,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="humidity != null">
        humidity = #{humidity,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="per.bryan.temperature.pojo.Temperature">
    update temperature
    set greenhouseNo = #{greenhouseNo,jdbcType=VARCHAR},
      sensorNo = #{sensorNo,jdbcType=VARCHAR},
      temperature = #{temperature,jdbcType=VARCHAR},
      humidity = #{humidity,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>